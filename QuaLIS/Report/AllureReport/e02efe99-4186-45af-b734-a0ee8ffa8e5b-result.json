{"name": "test_unitDelete", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'afterCount' referenced before assignment", "trace": "def test_unitDelete():\n>       TestCoverageUnit.unitDelete(driver, newName, newDescription, \"Yes\")\n\nTestCaseUnit.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"641ed8a5d34bee30fa44fe59fef88f89\")>, name = 'mm', description = 'Milli meter'\ndefaultStatus = 'Yes'\n\n    def unitDelete(driver,name,description,defaultStatus):\n    \n        ScreenNavigate.unit(driver,\"delete\")\n    \n        try:\n            countListbefore = driver.find_element(By.XPATH, baseMaster.get(\"UnitOfMeasurement\", \"unitCount\")).text\n    \n            countLIST = countListbefore.split(' ')\n    \n            beforeCount = int(countLIST[len(countLIST) - 1])\n    \n            logger.info(\"Got the count before delete, Count is \" + str(beforeCount))\n    \n        except:\n    \n            try:\n    \n                time.sleep(5)\n    \n                countListbefore = driver.find_element(By.XPATH, baseMaster.get(\"UnitOfMeasurement\", \"unitCount\")).text\n    \n                countLIST = countListbefore.split(' ')\n    \n                beforeCount = int(countLIST[len(countLIST) - 1])\n    \n                logger.info(\"Got the count before delete, Count is \"+str(beforeCount))\n            except:\n                logger.error(\"Unable to get the count\")\n    \n        q = driver.find_elements(By.TAG_NAME, \"tr\")\n        qq = len(q)\n    \n        # input(\"enter containertype with description: \")\n        unit = name+\" \"+description+\" \"+defaultStatus\n        for i in range(1, qq):\n            unitrow = q[i].text\n    \n            if unit.__contains__(name):\n                logger.info(\"Data is available in the grid index\".format(unitrow))\n    \n                m = str(i)\n                delete = \"(//span[@data-tip='Delete'])[\" + m + \"]\"\n                print(delete)\n                try:\n                    driver.find_element(By.XPATH, delete).click()\n                    logger.info(\"Clicked the delete button\")\n                except:\n                    logger.error(\"Unable to click the delete button\")\n    \n                try:\n                    driver.find_element(By.XPATH,\"//*[text()='OK']\").click()\n                    logger.info(\"Clicked the delete confirmation button\")\n                except:\n                    logger.error(\"Unable to click the delete confirmation button\")\n    \n                break\n    \n            else:\n                logger.error(\"The delete data is not available in the Grid\")\n    \n    \n            element = driver.find_element(By.XPATH, \"//span[text()='Base Master']\")\n    \n            try:\n                driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n            except:\n                pass\n    \n            try:\n                element.click()\n                logger.info(\"Clicked the post base master icon\")\n    \n            except:\n                logger.error(\"Unable to click the post base master icon\")\n    \n    \n        time.sleep(2)\n    \n        try:\n    \n            countListafter = driver.find_element(By.XPATH, baseMaster.get(\"UnitOfMeasurement\", \"unitCount\")).text\n    \n            aftercountLIS = countListafter.split(' ')\n    \n            afterCount = int(aftercountLIS[len(aftercountLIS) - 1])\n    \n            logger.info(\"Got the count before delete, Count is \" + str(afterCount))\n    \n        except:\n    \n            try:\n    \n                time.sleep(5)\n    \n                countListafter = driver.find_element(By.XPATH, baseMaster.get(\"UnitOfMeasurement\", \"unitCount\")).text\n    \n                aftercountLIS = countListafter.split(' ')\n    \n                afterCount = int(aftercountLIS[len(aftercountLIS) - 1])\n    \n                logger.info(\"Got the count after delete, Count is \" + str(afterCount))\n            except:\n                logger.error(\"Unable to get the count\")\n    \n    \n>       if afterCount==beforeCount-1:\nE       UnboundLocalError: local variable 'afterCount' referenced before assignment\n\nTestCoverage\\TestCoverageUnit.py:185: UnboundLocalError"}, "attachments": [{"name": "log", "source": "1ad2eb98-b8e8-4bd6-b33d-3c32e12689fe-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "01415c6f-2bf9-4bdc-b3d5-95bf90b63d66-attachment.txt", "type": "text/plain"}], "start": 1650649232597, "stop": 1650649404943, "uuid": "8c468847-270e-44c8-9a53-11016f45de66", "historyId": "df4ab6df90b2c1f39f48c99d99051945", "testCaseId": "ff67e6e2ba95d71fa5f65562654a2d96", "fullName": "TestCaseUnit#test_unitDelete", "labels": [{"name": "suite", "value": "TestCaseUnit"}, {"name": "host", "value": "AGL78"}, {"name": "thread", "value": "31084-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCaseUnit"}]}