{"name": "test_unitAdd", "status": "broken", "statusDetails": {"message": "configparser.NoSectionError: No section: 'Credential'", "trace": "@pytest.fixture(scope=\"function\")\n    def preCondition():\n        global driver\n>       driver = BrowserOperation.launchLIMS()\n\nd.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nUtility\\BrowserOperation.py:27: in launchLIMS\n    driver.get(configDriver.get(\"Credential\", \"link\"))\nC:\\Users\\Murali.R\\AppData\\Local\\Programs\\Python\\Python39\\lib\\configparser.py:781: in get\n    d = self._unify_values(section, vars)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <configparser.ConfigParser object at 0x000001779C43C4F0>, section = 'Credential', vars = None\n\n    def _unify_values(self, section, vars):\n        \"\"\"Create a sequence of lookups with 'vars' taking priority over\n        the 'section' which takes priority over the DEFAULTSECT.\n    \n        \"\"\"\n        sectiondict = {}\n        try:\n            sectiondict = self._sections[section]\n        except KeyError:\n            if section != self.default_section:\n>               raise NoSectionError(section) from None\nE               configparser.NoSectionError: No section: 'Credential'\n\nC:\\Users\\Murali.R\\AppData\\Local\\Programs\\Python\\Python39\\lib\\configparser.py:1152: NoSectionError"}, "attachments": [{"name": "stdout", "source": "e70e7f71-a8e1-415e-938a-dfd4c8fad9d8-attachment.txt", "type": "text/plain"}], "start": 1648110945244, "stop": 1648110945244, "uuid": "8d83b5cc-e89b-4a73-a5a2-212bbbc05ede", "historyId": "a0d1b510cfb4998b591dc83715ff0086", "testCaseId": "da1c59cbd2d96f5d09421f8ef8400b43", "fullName": "d#test_unitAdd", "labels": [{"name": "suite", "value": "d"}, {"name": "host", "value": "AGL78"}, {"name": "thread", "value": "19988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "d"}]}